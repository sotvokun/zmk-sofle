#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
  zip_scroll_scaler: zip_scroll_scaler {
    compatible = "zmk,input-processor-scaler";
    #input-processor-cells = <2>;
    type = <INPUT_EV_REL>;
    codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
    track-remainders;
  };
};

&mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
};

&msc_input_listener {
       input-processors = <&zip_scroll_scaler 2 1>;
};

&msc {
    acceleration-exponent = <0>;
    time-to-max-speed-ms = <0>;
    delay-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};


/ {

    behaviors {
        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <30>;
        };

        // Hold-tap: hold preferred
        ht_hpmo: ht_hpmo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        // Hold-tap: tap preferred
        ht_tpmo: ht_tpmo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            bindings = <&mo>, <&kp>;
        };

        // Mod-Morph: LBracket
        mm_lbracket: mm_lbracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LBKT>;
            mods = <(MOD_LGUI|MOD_RGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Mod-Morph: RBracket
        mm_rbracket: mm_rbracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp RBKT>;
            mods = <(MOD_LGUI|MOD_RGUI|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1               &kp N2        &kp N3        &kp N4        &kp N5         &kp UP_ARROW     &kp N6            &kp N7             &kp N8          &mm_lbracket     &mm_rbracket   &kp BACKSPACE
&kp TAB         &kp Q                &kp W         &kp E         &kp R         &kp T          &kp DOWN_ARROW   &kp Y             &kp U              &kp I           &kp O            &kp P          &kp MINUS
&kp LCTRL       &kp A                &kp S         &kp D         &kp F         &kp G          &kp LEFT_ARROW   &kp H             &kp J              &kp K           &kp L            &kp SEMI       &kp EQUAL
&kp LSHIFT      &kp Z                &kp X         &kp C         &kp V         &kp B          &kp RIGHT_ARROW  &kp N             &kp M              &kp COMMA       &kp DOT          &kp FSLH       &kp SINGLE_QUOTE
&none           &ht_tpmo 2 LALT      &kp LGUI      &none         &kp SPACE     &kp BACKSPACE  &kp ENTER        &kp RET           &ht_hpmo 1 SPACE   &kp LBKT        &kp RBKT         &kp BSLH
            >;

            display-name = "BASE";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_1 {
            bindings = <
&trans          &kp F1               &kp F2        &kp F3        &kp F4        &kp F5         &mmv MOVE_UP     &kp F6            &kp F7             &kp F8          &kp F9           &kp F10        &kp DEL
&trans          &trans               &trans        &trans        &trans        &trans         &mmv MOVE_DOWN   &kp HOME          &trans             &kp PG_UP       &trans           &trans         &kp F11
&trans          &trans               &trans        &trans        &trans        &trans         &mmv MOVE_LEFT   &kp LEFT          &kp DOWN           &kp UP          &kp RIGHT        &trans         &kp F12
&trans          &trans               &trans        &trans        &trans        &trans         &mmv MOVE_RIGHT  &trans            &kp PG_DN          &trans          &kp END          &trans         &kp GRAVE
&kp C_MUTE      &trans               &trans        &trans        &trans        &trans         &mkp LCLK        &trans            &trans             &trans          &trans           &trans
            >;

            display-name = "FN";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&trans          &kp F1               &kp F2        &kp F3        &kp F4        &kp F5         &trans           &trans            &trans             &trans          &trans           &trans         &trans
&out OUT_TOG    &bt BT_SEL 0         &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &trans           &trans            &trans             &trans          &trans           &trans         &trans
&trans          &trans               &trans        &trans        &trans        &bt BT_CLR     &trans           &trans            &msc SCRL_DOWN     &msc SCRL_UP    &trans           &trans         &trans
&trans          &trans               &trans        &trans        &trans        &bt BT_CLR_ALL &trans           &trans            &trans             &trans          &trans           &bootloader    &sys_reset
&none           &trans               &trans        &trans        &trans        &trans         &trans           &trans            &trans             &trans          &trans           &soft_off
            >;

            display-name = "SYS";
        };

    };
};
